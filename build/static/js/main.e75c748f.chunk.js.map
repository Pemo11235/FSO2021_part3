{"version":3,"sources":["SearchBar.js","PersonForm.js","DeleteButton.js","Persons.js","services/persons.js","App.js","index.js"],"names":["SearchBar","filter","onChangeFilter","value","onChange","PersonForm","onSubmit","newName","onChangeName","newNumber","onChangeNumber","type","DeleteButton","onClickAction","onClick","Persons","persons","filterWord","onDelete","person","name","toLowerCase","includes","map","filteredP","number","id","baseUrl","axios","get","then","response","data","newObject","post","delete","statusText","status","catch","error","put","App","useState","setPersons","setNewName","setNewNumber","setFilter","notificationType","setNotificationType","notificationTest","setNotificationText","isDuplicated","find","length","getDuplicatedID","Notification","message","className","setTimeout","handleError","useEffect","services","initialPersons","event","target","preventDefault","newObj","personToUpdate","window","confirm","replaced","newPersons","onUpdate","concat","personToDelete","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e75c748f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SearchBar ({filter, onChangeFilter}) {\n    return(\n        <div>\n            <p>Filter shown with <input value={filter} onChange={onChangeFilter}/></p>\n        </div>\n    )\n}\n\nexport {SearchBar}","import React from \"react\";\n\nfunction PersonForm(\n    {\n        onSubmit,\n        newName,\n        onChangeName,\n        newNumber,\n        onChangeNumber\n    }) {\n    return (\n        <form onSubmit={onSubmit}>\n            <div>\n                name: <input value={newName} onChange={onChangeName}/>\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={onChangeNumber}/>\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport {PersonForm}","import React from \"react\";\n\nfunction DeleteButton ({onClickAction}) {\n    return (\n        <button onClick={onClickAction}> Delete</button>\n    )\n}\n\nexport {DeleteButton}","import React from \"react\";\nimport {DeleteButton} from \"./DeleteButton\";\n\nfunction Persons({persons, filterWord, onDelete}) {\n    return (\n        <div>\n            {persons\n                .filter((person) =>\n                    person.name.toLowerCase().includes(filterWord.toLowerCase())\n                )\n                .map(filteredP =>\n                    <p key={filteredP.id}> {filteredP.name} - {filteredP.number}\n                        <DeleteButton onClickAction={()=>onDelete(filteredP.id)} />\n                    </p>\n                )\n            }\n        </div>\n    )\n}\n\nexport {Persons}","import axios from \"axios\";\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.statusText === 'OK' ? id : response.status)\n        .catch(error => 'error')\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll,\n    create,\n    remove,\n    update\n}","import React, {useEffect, useState} from 'react'\nimport {SearchBar} from \"./SearchBar\";\nimport {PersonForm} from \"./PersonForm\";\nimport {Persons} from \"./Persons\";\nimport services from './services/persons';\nimport './App.css'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filter, setFilter] = useState('')\n    const [notificationType, setNotificationType] = useState('')\n    const [notificationTest, setNotificationText] = useState('')\n\n    const onChangeName = (event) => {\n        setNewName(event.target.value);\n    }\n    const onChangeNumber = (event) => {\n        setNewNumber(event.target.value);\n    }\n    const onChangeFilter = (event) => {\n        setFilter(event.target.value);\n    }\n\n    const onDelete = (id) => {\n        const personToDelete = persons.find(person => person.id === id)\n        const result = window.confirm(`Delete ${personToDelete.name}?`)\n\n        if (result) {\n            services\n                .remove(id)\n                .then(res => res !== 'error'\n                    ? setPersons(persons.filter(person => person.id !== id))\n                    : handleError(personToDelete)\n                )\n        }\n    }\n\n    const onUpdate = (id, newObj) => {\n        const personToUpdate = persons.find(person => person.id === id)\n        const result = window.confirm(`${personToUpdate.name} is already added to phonebook, replace the old number with a new one?`)\n\n        if (result) {\n            services.update(id, newObj).then(replaced => {\n                const newPersons = persons.map(\n                    (person) => person.id === replaced.id ?\n                        {\n                            id: replaced.id,\n                            name: replaced.name,\n                            number: replaced.number\n                        } : {\n                            id: person.id,\n                            name: person.name,\n                            number: person.number\n                        }\n                )\n                setPersons(newPersons)\n            })\n        }\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        const newObject = {\n            name: newName,\n            number: newNumber\n        }\n        isDuplicated(newName)\n            ? onUpdate(getDuplicatedID(newName), newObject)\n            : services\n                .create(newObject)\n                .then(newObj => {\n                    setPersons(persons.concat(newObj))\n                    setNotificationType('added')\n                    setNotificationText(`Added ${newName}`)\n                })\n    }\n\n\n    const isDuplicated = (name) => {\n        return persons.find(person => person.name.toLowerCase() === name.toLowerCase() &&\n            person.name.length === name.length);\n    }\n\n    const getDuplicatedID = (name) => {\n        const foundPerson = persons.find(person => person.name.toLowerCase() === name.toLowerCase() &&\n            person.name.length === name.length);\n        return foundPerson.id\n    }\n\n    const Notification = ({message, type}) => {\n        if (message) {\n            return (\n                <>\n                    {type === 'added' &&\n                    <div className={'added'}>\n                        {message}\n                    </div>\n                    }\n                    {type === 'error' &&\n                    <div className={'error'}>\n                        {message}\n                    </div>\n                    }\n                    {setTimeout(() => {\n                        setNotificationText('')\n                        setNotificationType('')\n                    }, 3000)\n                    }\n                </>\n            )\n        }\n        return null\n    }\n\n    const handleError = person => {\n        setNotificationType('error')\n        setNotificationText(`Information of ${person.name} has already been removed from server`)\n    }\n\n    useEffect(() => {\n        services\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, []);\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            {notificationType && <Notification message={notificationTest} type={notificationType}/>}\n            <SearchBar filter={filter} onChangeFilter={onChangeFilter}/>\n            <h3>Add new</h3>\n            <PersonForm\n                newNumber={newNumber} newName={newName}\n                onSubmit={onSubmit} onChangeNumber={onChangeNumber}\n                onChangeName={onChangeName}/>\n            <h3>Numbers</h3>\n            <Persons persons={persons} filterWord={filter} onDelete={onDelete}/>\n        </div>\n    )\n};\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}